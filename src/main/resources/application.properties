#WebApplication Type Setting
spring.main.web-application-type=servlet

# Data Source Setting
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:XE
spring.datasource.username=allit_user
spring.datasource.password=ora123

# JPA Setting
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# @Entity Setting
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true

# Logging Setting
logging.level.org.hibernate=info

# Thymeleaf Cache Setting
spring.thymeleaf.cache=false

# 파일업로드
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

# 무한서클 방지
spring.main.allow-circular-references=true
spring.main.allow-bean-definition-overriding=true

# 파일 저장 경로
resource.path=file:///c:/fileUpload/images/
connect.path=/images/**

# 구글 로그인 api
spring.security.oauth2.client.registration.google.client-id=101897841231-4tbd7hnf4a7u2b2jkgj4106cpjoij5l8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile, email 

# 페이스북 로그인 api
spring.security.oauth2.client.registration.facebook.client-id=1638169619958506
spring.security.oauth2.client.registration.facebook.client-secret=fcb32575cde13eb36af40c79c0c37d2f
spring.security.oauth2.client.registration.facebook.scope=public_profile, email

## 네이버 로그인 api
spring.security.oauth2.client.registration.naver.client-id=esEC8cesO_TuoKoEl4v6
spring.security.oauth2.client.registration.naver.client-secret=7t7ycX4UFR
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name, email

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌

#카카오 로그인 api
spring.security.oauth2.client.registration.kakao.client-id=eb321fb3d248ee849e22c78c7ee027e1
spring.security.oauth2.client.registration.kakao.client-secret=4LYxEMaGvhSStcbj6yYHftIJ3aEgsCZ0
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-authentication-method = POST

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# 회원정보를 json으로 받는데 id라는 키값으로 카카오가 리턴해줌

